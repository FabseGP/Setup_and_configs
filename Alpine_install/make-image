#!/usr/bin/bash

# Preparing image

  set -xe
  mkdir -p dist /dist
  OUTPUT_IMG="/dist/ALPINE_RPI.img"
  rm -Rf "$OUTPUT_IMG"
  truncate -s 2G "$OUTPUT_IMG"

  fdisk -H 255 -S 63 "$OUTPUT_IMG" <<-EOF
o
n
p
1

+128MB
t
c
n
p
2


w
EOF

  LOOP_DEV=$(losetup --partscan --show --find "${OUTPUT_IMG}")
  BOOT_DEV="$LOOP_DEV"p1
  ROOT_DEV="$LOOP_DEV"p2

  BOOT_NAME="boot"
  FILESYSTEM_NAME="ALPINE"

#----------------------------------------------------------------------------------------------------------------------------------

# Formatting the partitions

  mkfs.fat -F32 -n $BOOT_NAME "$BOOT_DEV"
  mkfs.ext4 -L $FILESYSTEM_NAME "$ROOT_DEV"
  mkdir -p /alpine
  mount --make-private "$ROOT_DEV" /alpine
  mkdir -p /alpine/boot
  mount --make-private "$BOOT_DEV" /alpine/boot

  IMGID="$(dd if="${OUTPUT_IMG}" skip=440 bs=1 count=4 2>/dev/null | xxd -e | cut -f 2 -d' ')"

  BOOT_PARTUUID="${IMGID}-01"
  ROOT_PARTUUID="${IMGID}-02"

#----------------------------------------------------------------------------------------------------------------------------------

# Bootstrapping and chroot

  ./chroot.sh

  cp -R bootstrap/ /alpine/

  /alpine/enter-chroot /bootstrap/kernel.sh
  /alpine/enter-chroot /bootstrap/system.sh
  /alpine/enter-chroot /bootstrap/networking.sh 
  /alpine/enter-chroot /bootstrap/users.sh
  /alpine/enter-chroot /bootstrap/services.sh
  /alpine/enter-chroot /bootstrap/first-boot.sh

  rm -rf /alpine/var/lib/apt/lists/*
  rm -rf /alpine/var/cache/apk/*
  rm -rf /alpine/root/*
  rm -rf /alpine/bootstrap/
  rm  /alpine/env.sh /alpine/etc/resolv.conf /alpine/enter-chroot /alpine/destroy
  find /alpine -iname "*-" -delete
  find /alpine -iname "*~" -delete

  umount -lf /alpine

#----------------------------------------------------------------------------------------------------------------------------------

# Shrinking the image

  ROOT_PART_START=$(parted -ms "$OUTPUT_IMG" unit B print | tail -n 1 | cut -d ':' -f 2 | tr -d 'B')
  ROOT_BLOCK_SIZE=$(tune2fs -l "$ROOT_DEV" | grep '^Block size:' | tr -d ' ' | cut -d ':' -f 2)
  ROOT_MIN_SIZE=$(resize2fs -P "$ROOT_DEV" | cut -d ':' -f 2 | tr -d ' ')

#----------------------------------------------------------------------------------------------------------------------------------

# Shrinking filesystems

  e2fsck -f -p "$ROOT_DEV"
  resize2fs -p "$ROOT_DEV" $ROOT_MIN_SIZE

  PART_END=$(($ROOT_PART_START + ($ROOT_MIN_SIZE * $ROOT_BLOCK_SIZE)))
  parted ---pretend-input-tty "$OUTPUT_IMG" <<EOF
unit B
resizepart 2 $PART_END
yes
quit
EOF

  losetup -d "$LOOP_DEV"

#----------------------------------------------------------------------------------------------------------------------------------

# Truncate free space

  FREE_START=$(parted -ms "$OUTPUT_IMG" unit B print free | tail -1 | cut -d ':' -f 2 | tr -d 'B')
  truncate -s $FREE_START "$OUTPUT_IMG"

  gzip -c "$OUTPUT_IMG" > "dist/ALPINE_RPI-edge_aarch64.img.gz"

  echo "DONE."
